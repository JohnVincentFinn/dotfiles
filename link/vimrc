


" Misc settings

source ~/.vim/bundles.vim

let g:syntastic_cpp_config_file = ".syntastic_cpp_config"
let g:syntastic_cpp_no_default_include_dirs = 1             " usually these headers won't be used for compiling

set number                    " Shows the line number on the left
set autoindent                " When you hit enter automatically be indented the correct amount
set expandtab                 " uses spaces instead of tabs (watch out for makefiles they require tabs instead of spaces)
set shiftwidth=4              " This controls the indenting when you use >> or <<
set softtabstop=4             " This doesnt really matter with expandtab on but w/e
set tabstop=4                 " use 4 spaces to tab
set showmatch                 " highlight matching parens or braces
set history=100
set hlsearch                  " when you search highlight what you just searched for
set visualbell                " Dont make an annoying ping when you do something wrong
set encoding=utf-8
set fileencoding=utf-8
color torte                   " the torte scheme is personal preference but there are lots of good color schemes

filetype plugin on
"autocmd ColorScheme * highlight ColorColumn ctermbg=235 guibg=#2c2d27
"highlight ColorColumn ctermbg=250 guibg=#2c2d27
"let &colorcolumn=join(range(81,90),",")
"match ErrorMsg '\%>91v.\+'
"

"set rtp+=/user/johnfinn/.vim/bundle/calendar.vim/autoload/calendar

highlight OverLength ctermbg=red ctermfg=white guibg=#592929
function OverLength()
    match OverLength /\%81v.\+/
endfunction
function OverLength72()
    match OverLength /\%73v.\+/
endfunction

highlight FindColor ctermbg=red guibg=#592929
function Colorfind()
    match FindColor  /\(\%#.*\)\@<=f/
endfunction

" nnoremap ; ToggleMacro
" nnoremap , ExecuteMacro

" qq - record macro
" q  - stop recording macro
" Q  - replay macro
noremap Q @q

" Tlist settings
let Tlist_Use_Right_Window   = 1
let Tlist_Exit_OnlyWindow    = 1
let Tlist_Display_Prototype  = 1
let Tlist_WinWidth = 55
let Tlist_Auto_Highlight_Tag = 0

" powerline settings
let g:Powerline_symbols = "fancy"

" mappings
nnoremap <silent> <F8> :TlistToggle<CR>
nnoremap <silent> <F9> :NERDTreeToggle<CR>

nmap <silent> <C-n> :tabnext<CR>
nmap <silent> <C-p> :tabprev<CR>

" status line settings
set statusline=%f
set statusline+=\ -\
set statusline+=FileType
set statusline+=%y


"CCTreeTraceReverse <symbolname>
"CCTreeTraceForward <symbolname>
"CCTreeRecurseDepthPlus   
"CCTreeRecurseDepthMinus  

