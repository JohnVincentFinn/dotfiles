# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="minimal"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git common-aliases extract systemd ssh-agent)

source $ZSH/oh-my-zsh.sh

# User configuration

export PATH=$HOME/bin:/usr/local/bin:$PATH
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#

autoload -U compinit promptinit
compinit
promptinit

# get some colors
autoload -U colors && colors

function prompt_clock() {
    local clock_color
    if [ ! -w "." ]; then
        clock_color="red"
    else
        clock_color="blue"
    fi
    echo "$(date +"%%F{$clock_color}%H%%f:%%F{$clock_color}%M%%f")"
}

# Git status for zsh
function prompt_git() {
  local git_status output flags
  git_status="$(git status 2>/dev/null)"
  [[ $? != 0 ]] && return;
  output="$(echo "$git_status" | awk '/# Initial commit/ {print "(init)"}')"
  [[ "$output" ]] || output="$(echo "$git_status" | awk '/# On branch/ {print $4}')"
  [[ "$output" ]] || output="$(git branch | perl -ne '/^\* (.*)/ && print $1')"
  flags="$(
    echo "$git_status" | awk 'BEGIN {r=""} \
      /^Changes to be committed:$/        {r=r "+"}\
      /^Changes not staged for commit:$/  {r=r "!"}\
      /^Untracked files:$/                {r=r "?"}\
      END {print r}'
  )"
  if [[ "$flags" ]]; then
    output="$output $flags"
  fi
  echo "%F{white}$output%f"
}

function git_prompt_info() {
    echo "$(current_branch)"
}

# Example of what it looks like
# [10:30] Hostname ~$
PROMPT='%B[$(prompt_clock)] %(!.%F{red}.)%m%f %~$%b '
RPROMPT='$(prompt_git)%B%F{red}%(!.ROOT.)%f%b'

zstyle ':completion:*' menu select

setopt HIST_IGNORE_DUPS


#[[ -n ${key[Backspace]} ]] && bindkey "${key[Backspace]}" backward-delete-char
#[[ -n ${key[Insert]}    ]] && bindkey "${key[Insert]}"    overwrite-mode
#[[ -n ${key[Home]}      ]] && bindkey "${key[Home]}"      beginning-of-line
#[[ -n ${key[PageUp]}    ]] && bindkey "${key[PageUp]}"    up-line-or-history
#[[ -n ${key[Delete]}    ]] && bindkey "${key[Delete]}"    delete-char
#[[ -n ${key[End]}       ]] && bindkey "${key[End]}"       end-of-line
#[[ -n ${key[PageDown]}  ]] && bindkey "${key[PageDown]}"  down-line-or-history
#[[ -n ${key[Up]}        ]] && bindkey "${key[Up]}"        up-line-or-search
#[[ -n ${key[Left]}      ]] && bindkey "${key[Left]}"      backward-char
#[[ -n ${key[Down]}      ]] && bindkey "${key[Down]}"      down-line-or-search
#[[ -n ${key[Right]}     ]] && bindkey "${key[Right]}"     forward-char

DIRSTACKFILE="$HOME/.cache/zsh/dirs"
if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
  dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
  [[ -d $dirstack[1] ]] && cd $dirstack[1]
fi
chpwd() {
  print -l $PWD ${(u)dirstack} >$DIRSTACKFILE
}

DIRSTACKSIZE=20

setopt autopushd pushdsilent pushdtohome

## Remove duplicate entries
setopt pushdignoredups

## This reverts the +/- operators.
setopt pushdminus
